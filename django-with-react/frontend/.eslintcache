[{"/Users/ajyng/Desktop/alldaylongdjango/django-with-react/frontend/src/index.js":"1","/Users/ajyng/Desktop/alldaylongdjango/django-with-react/frontend/src/pages/index.js":"2","/Users/ajyng/Desktop/alldaylongdjango/django-with-react/frontend/src/components/AppLayout.js":"3","/Users/ajyng/Desktop/alldaylongdjango/django-with-react/frontend/src/pages/About.js":"4","/Users/ajyng/Desktop/alldaylongdjango/django-with-react/frontend/src/pages/Home.js":"5","/Users/ajyng/Desktop/alldaylongdjango/django-with-react/frontend/src/pages/accounts/Login.js":"6","/Users/ajyng/Desktop/alldaylongdjango/django-with-react/frontend/src/pages/accounts/index.js":"7","/Users/ajyng/Desktop/alldaylongdjango/django-with-react/frontend/src/components/StoryList.js":"8","/Users/ajyng/Desktop/alldaylongdjango/django-with-react/frontend/src/components/SuggestionList.js":"9","/Users/ajyng/Desktop/alldaylongdjango/django-with-react/frontend/src/components/Suggestion.js":"10","/Users/ajyng/Desktop/alldaylongdjango/django-with-react/frontend/src/components/PostList.js":"11","/Users/ajyng/Desktop/alldaylongdjango/django-with-react/frontend/src/components/Post.js":"12","/Users/ajyng/Desktop/alldaylongdjango/django-with-react/frontend/src/pages/accounts/Profile.js":"13","/Users/ajyng/Desktop/alldaylongdjango/django-with-react/frontend/src/pages/accounts/Signup.js":"14","/Users/ajyng/Desktop/alldaylongdjango/django-with-react/frontend/src/utils/useLocalStorage.js":"15","/Users/ajyng/Desktop/alldaylongdjango/django-with-react/frontend/src/store.js":"16","/Users/ajyng/Desktop/alldaylongdjango/django-with-react/frontend/src/utils/LoginRequiredRoute.js":"17","/Users/ajyng/Desktop/alldaylongdjango/django-with-react/frontend/src/pages/PostNew.js":"18","/Users/ajyng/Desktop/alldaylongdjango/django-with-react/frontend/src/components/PostNewForm.js":"19","/Users/ajyng/Desktop/alldaylongdjango/django-with-react/frontend/src/utils/base64.js":"20","/Users/ajyng/Desktop/alldaylongdjango/django-with-react/frontend/src/utils/forms.js":"21"},{"size":379,"mtime":1611385996356,"results":"22","hashOfConfig":"23"},{"size":613,"mtime":1611769470299,"results":"24","hashOfConfig":"23"},{"size":1077,"mtime":1611768602031,"results":"25","hashOfConfig":"23"},{"size":100,"mtime":1610552781125,"results":"26","hashOfConfig":"23"},{"size":877,"mtime":1611769165031,"results":"27","hashOfConfig":"23"},{"size":3336,"mtime":1611851008455,"results":"28","hashOfConfig":"23"},{"size":558,"mtime":1611386256728,"results":"29","hashOfConfig":"23"},{"size":338,"mtime":1610556555426,"results":"30","hashOfConfig":"23"},{"size":1905,"mtime":1611677331182,"results":"31","hashOfConfig":"23"},{"size":964,"mtime":1611512028069,"results":"32","hashOfConfig":"23"},{"size":824,"mtime":1611679367491,"results":"33","hashOfConfig":"23"},{"size":1035,"mtime":1611680344229,"results":"34","hashOfConfig":"23"},{"size":115,"mtime":1610551391128,"results":"35","hashOfConfig":"23"},{"size":3091,"mtime":1610731268654,"results":"36","hashOfConfig":"23"},{"size":886,"mtime":1611384869590,"results":"37","hashOfConfig":"23"},{"size":1529,"mtime":1611385762928,"results":"38","hashOfConfig":"23"},{"size":535,"mtime":1611388165776,"results":"39","hashOfConfig":"23"},{"size":338,"mtime":1611770607299,"results":"40","hashOfConfig":"23"},{"size":4829,"mtime":1611851577321,"results":"41","hashOfConfig":"23"},{"size":277,"mtime":1611848371248,"results":"42","hashOfConfig":"23"},{"size":311,"mtime":1611851083847,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1mv5zb5",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/ajyng/Desktop/alldaylongdjango/django-with-react/frontend/src/index.js",[],["92","93"],"/Users/ajyng/Desktop/alldaylongdjango/django-with-react/frontend/src/pages/index.js",[],"/Users/ajyng/Desktop/alldaylongdjango/django-with-react/frontend/src/components/AppLayout.js",[],"/Users/ajyng/Desktop/alldaylongdjango/django-with-react/frontend/src/pages/About.js",[],"/Users/ajyng/Desktop/alldaylongdjango/django-with-react/frontend/src/pages/Home.js",[],"/Users/ajyng/Desktop/alldaylongdjango/django-with-react/frontend/src/pages/accounts/Login.js",[],"/Users/ajyng/Desktop/alldaylongdjango/django-with-react/frontend/src/pages/accounts/index.js",[],"/Users/ajyng/Desktop/alldaylongdjango/django-with-react/frontend/src/components/StoryList.js",[],["94","95"],"/Users/ajyng/Desktop/alldaylongdjango/django-with-react/frontend/src/components/SuggestionList.js",[],"/Users/ajyng/Desktop/alldaylongdjango/django-with-react/frontend/src/components/Suggestion.js",["96"],"import React from 'react';\nimport { Button, Avatar } from 'antd';\nimport { UserOutlined } from '@ant-design/icons';\nimport './Suggestion.scss';\n\nexport default function Suggestion({ suggestionUser, onFollowUser }) {\n    const { username, name, avatar_url, is_follow } = suggestionUser;\n    return (\n        <div className=\"suggestion\">\n            <div className=\"avatar\">\n                <Avatar\n                    size=\"small\" \n                    icon={\n                    <img src={\"http://localhost:8000\" + avatar_url}\n                    alt={`${username}'s avatar`} />\n                } />\n            </div>\n\n            <div className=\"username\">\n                {name.length === 0 ? username : name}\n            </div>\n            <div className=\"action\">\n                {is_follow && \"팔로잉 중\"}\n                {!is_follow && <Button size=\"small\" onClick={() => onFollowUser(username)}>Follow</Button>}\n            </div>\n        </div>\n    )\n}","/Users/ajyng/Desktop/alldaylongdjango/django-with-react/frontend/src/components/PostList.js",["97","98","99"],"import React from 'react';\nimport Post from './Post';\nimport useAxios from 'axios-hooks';\nimport { useAppContext } from \"store\";\nimport { Alert } from \"antd\"; \n\nfunction PostList() {\n    const { store: {jwtToken} } = useAppContext();\n\n    const headers = { Authorization: `JWT ${jwtToken}` };\n\n    const [{ data: postList, loading, error}, refetch] = useAxios({\n        url: \"http://localhost:8000/api/posts/\",\n        headers\n        });\n\n    return (\n        <div>\n            {  postList && postList.length === 0 && (\n                <Alert type=\"warning\" message=\"포스팅이 없습니다. :-(\" />\n            )}\n\n            {\n                postList && postList.map(post => {\n                return <Post post={post} key={post.id} />\n                })\n            }\n        </div>\n    );\n}\n\nexport default PostList;","/Users/ajyng/Desktop/alldaylongdjango/django-with-react/frontend/src/components/Post.js",["100","101","102","103"],"/Users/ajyng/Desktop/alldaylongdjango/django-with-react/frontend/src/pages/accounts/Profile.js",[],"/Users/ajyng/Desktop/alldaylongdjango/django-with-react/frontend/src/pages/accounts/Signup.js",["104","105","106","107"],"import React, { useState, useEffect } from 'react';\nimport Axios from 'axios';\nimport { Alert, Form, Input, Button, Checkbox, notification } from 'antd';\nimport { useHistory } from 'react-router-dom';\nimport { SmileOutlined, CrownOutlined } from '@ant-design/icons';\n\nexport default function Signup() {\n    const history = useHistory();\n    const [fieldErrors, setFieldErrors] = useState({});\n\n    const onFinish = values => {\n        async function fn() {\n            const { username, password } = values;\n\n            setFieldErrors({});\n\n            const data = { username, password };\n            try {\n                const response = await Axios.post(\"http://localhost:8000/accounts/signup/\", data);\n                notification.open({\n                    message: \"회원가입 성공\",\n                    description: \"로그인 페이지로 이동합니다.\",\n                    icon: <SmileOutlined style={{ color: \"#108ee9\" }} />\n                });\n                history.push(\"/accounts/login\");\n            }\n            catch(error) {\n                notification.open({\n                    message: \"회원가입 실패\",\n                    description: \"아이디/암호를 확인해주세요.\",\n                    icon: <CrownOutlined style={{ color: \"#ff3333\" }} />\n                });\n\n                if (error.response) {\n                    const { data: fieldErrorMessage } = error.response;\n                    setFieldErrors(\n                        Object.entries(fieldErrorMessage).reduce( (acc, [fieldName, errors]) => {\n                            acc[fieldName] = {\n                                validateStatus: \"error\",\n                                help: errors.join(\" \"),\n                            }\n                            return acc;\n                        }, {})\n                    )\n                }\n            }\n        }\n        fn();\n    }\n\n    return (\n        <Form\n            {...layout}\n            onFinish={onFinish}\n            // onFinishFailed={onFinishFailed}\n            >\n            <Form.Item\n                label=\"Username\"\n                name=\"username\"\n                rules={[\n                    { required: true, message: 'Please input your username!' },\n                    { min: 5, message: '5글자 이상 입력해주세요.'}\n            ]}\n            hasFeedback\n            {...fieldErrors.username}\n            >\n                <Input />\n            </Form.Item>\n\n            <Form.Item\n                label=\"Password\"\n                name=\"password\"\n                rules={[{ required: true, message: 'Please input your password!' }]}\n                {...fieldErrors.password}\n            >\n                <Input.Password />\n            </Form.Item>\n\n            <Form.Item {...tailLayout}>\n                <Button type=\"primary\" htmlType=\"submit\">\n                Submit\n                </Button>\n            </Form.Item>\n        </Form>\n    );\n}\nconst layout = {\n    labelCol: { span: 8 },\n    wrapperCol: { span: 16 },\n  };\n\nconst tailLayout = {\n    wrapperCol: { offset: 8, span: 16 },\n};","/Users/ajyng/Desktop/alldaylongdjango/django-with-react/frontend/src/utils/useLocalStorage.js",[],"/Users/ajyng/Desktop/alldaylongdjango/django-with-react/frontend/src/store.js",["108"],"/Users/ajyng/Desktop/alldaylongdjango/django-with-react/frontend/src/utils/LoginRequiredRoute.js",[],"/Users/ajyng/Desktop/alldaylongdjango/django-with-react/frontend/src/pages/PostNew.js",[],"/Users/ajyng/Desktop/alldaylongdjango/django-with-react/frontend/src/components/PostNewForm.js",["109","110"],"import React, { useState } from \"react\";\nimport { Form, Input, Button, Upload, Modal, notification } from 'antd';\nimport { FrownOutlined, PlusOutlined } from \"@ant-design/icons\";\nimport { getBase64FromFile } from \"utils/base64\";\nimport Axios from \"axios\";\nimport { useAppContext } from \"store\";\nimport { parseErrorMessages } from \"utils/forms\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default function PostNewForm() {\n    const history = useHistory();\n    const { store: { jwtToken } } = useAppContext();\n    const [fieldErrors, setFieldErrors] = useState({});\n    const [fileList, setFileList] = useState([]);\n    const [previewPhoto, setPreviewPhoto] = useState({\n        visible: false,\n        base64: null\n    })\n\n    const handleFinish = async fieldValues => {\n        const { caption, location, photo: { fileList } } = fieldValues;\n\n        const formData = new FormData();\n        formData.append(\"caption\", caption);\n        formData.append(\"location\", location);\n        fileList.forEach(file => {\n            formData.append(\"photo\", file.originFileObj);\n        });\n\n        const headers = { Authorization: `JWT ${jwtToken}` };\n        try {\n            await Axios.post(\"http://localhost:8000/api/posts/\", formData, { headers });\n            history.push(\"/\");\n        }\n        catch(error) {\n            if (error.response) {\n                const { status, data: fieldsErrorMessages } = error.response;\n                if (typeof fieldsErrorMessages === \"string\") {\n                    notification.open({\n                        message: \"서버 오류\",\n                        description: `에러) ${status} 응답을 받았습니다. 서버 에러를 확인해주세요.`,\n                        icon: <FrownOutlined style={{ color: \"#ff3333\" }} />\n                    });\n                }\n\n            }\n        }\n    };\n\n    const handleUploadChange = ({ fileList }) =>{\n        setFileList(fileList);\n    };\n\n    const handlePreviewPhoto = async file => {\n        if (!file.url && !file.preview) {\n            file.preview = await getBase64FromFile(file.originFileObj);\n        }\n\n        setPreviewPhoto({\n            visible: true,\n            base64: file.url || file.preview\n        })\n    }\n\n    return (\n            <Form\n                {...layout}\n                onFinish={handleFinish}\n                autoComplete={\"false\"}\n            >\n                <Form.Item\n                    label=\"Caption\"\n                    name=\"caption\"\n                    rules={[\n                        { required: true, message: 'Caption을 입력해주세요.' },\n                    ]}\n                    hasFeedback\n                    {...fieldErrors.caption}\n                    {...fieldErrors.non_field_errors}\n                >\n                    <Input />\n                </Form.Item>\n\n                <Form.Item\n                    label=\"Location\"\n                    name=\"location\"\n                    rules={[\n                        { required: true, message: 'Location을 입력해주세요.' },\n                    ]}\n                    hasFeedback\n                    {...fieldErrors.location}\n                >\n                    <Input />\n                </Form.Item>\n\n                <Form.Item\n                    label=\"Photo\"\n                    name=\"photo\"\n                    rules={[{ required: true, message: \"사진을 입력해주세요.\" }]}\n                    hasFeedback\n                    {...fieldErrors.photo}\n                >\n\n                    <Upload\n                        listType=\"picture-card\"\n                        fileList={fileList}\n                        beforeUpload={() => {\n                            return false;\n                        }}\n                        onChange={handleUploadChange}\n                        onPreview={handlePreviewPhoto}\n                    >\n\n                        { fileList.length > 0 ? null : (\n                        <div>\n                            <PlusOutlined />\n                            <div className=\"ant-upload-text\">Upload</div>\n                        </div>\n                        )}\n                    </Upload>                    \n                </Form.Item>\n\n                <Form.Item {...tailLayout}>\n                    <Button type=\"primary\" htmlType=\"submit\">\n                    Submit\n                    </Button>\n                </Form.Item>\n\n                <Modal visible={previewPhoto.visible} footer={null} onCancel={() => setPreviewPhoto({visible: false})}>\n                    <img src={previewPhoto.base64} style={{ width: \"100%\" }} alt=\"Preview\" />\n                </Modal>\n            </Form>\n    );\n}\n\nconst layout = {\n    labelCol: { span: 8 },\n    wrapperCol: { span: 16 },\n  };\n\nconst tailLayout = {\n    wrapperCol: { offset: 8, span: 16 },\n};","/Users/ajyng/Desktop/alldaylongdjango/django-with-react/frontend/src/utils/base64.js",[],"/Users/ajyng/Desktop/alldaylongdjango/django-with-react/frontend/src/utils/forms.js",[],{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","replacedBy":"114"},{"ruleId":"111","replacedBy":"115"},{"ruleId":"113","replacedBy":"116"},{"ruleId":"117","severity":1,"message":"118","line":3,"column":10,"nodeType":"119","messageId":"120","endLine":3,"endColumn":22},{"ruleId":"117","severity":1,"message":"121","line":12,"column":30,"nodeType":"119","messageId":"120","endLine":12,"endColumn":37},{"ruleId":"117","severity":1,"message":"122","line":12,"column":39,"nodeType":"119","messageId":"120","endLine":12,"endColumn":44},{"ruleId":"117","severity":1,"message":"123","line":12,"column":47,"nodeType":"119","messageId":"120","endLine":12,"endColumn":54},{"ruleId":"117","severity":1,"message":"118","line":3,"column":24,"nodeType":"119","messageId":"120","endLine":3,"endColumn":36},{"ruleId":"117","severity":1,"message":"124","line":6,"column":47,"nodeType":"119","messageId":"120","endLine":6,"endColumn":54},{"ruleId":"117","severity":1,"message":"125","line":6,"column":56,"nodeType":"119","messageId":"120","endLine":6,"endColumn":69},{"ruleId":"117","severity":1,"message":"126","line":7,"column":23,"nodeType":"119","messageId":"120","endLine":7,"endColumn":27},{"ruleId":"117","severity":1,"message":"127","line":1,"column":27,"nodeType":"119","messageId":"120","endLine":1,"endColumn":36},{"ruleId":"117","severity":1,"message":"128","line":3,"column":10,"nodeType":"119","messageId":"120","endLine":3,"endColumn":15},{"ruleId":"117","severity":1,"message":"129","line":3,"column":38,"nodeType":"119","messageId":"120","endLine":3,"endColumn":46},{"ruleId":"117","severity":1,"message":"130","line":19,"column":23,"nodeType":"119","messageId":"120","endLine":19,"endColumn":31},{"ruleId":"117","severity":1,"message":"131","line":4,"column":3,"nodeType":"119","messageId":"120","endLine":4,"endColumn":9},{"ruleId":"117","severity":1,"message":"132","line":7,"column":10,"nodeType":"119","messageId":"120","endLine":7,"endColumn":28},{"ruleId":"117","severity":1,"message":"133","line":13,"column":25,"nodeType":"119","messageId":"120","endLine":13,"endColumn":39},"no-native-reassign",["134"],"no-negated-in-lhs",["135"],["134"],["135"],"no-unused-vars","'UserOutlined' is defined but never used.","Identifier","unusedVar","'loading' is assigned a value but never used.","'error' is assigned a value but never used.","'refetch' is assigned a value but never used.","'tag_set' is assigned a value but never used.","'like_user_set' is assigned a value but never used.","'name' is assigned a value but never used.","'useEffect' is defined but never used.","'Alert' is defined but never used.","'Checkbox' is defined but never used.","'response' is assigned a value but never used.","'Update' is defined but never used.","'parseErrorMessages' is defined but never used.","'setFieldErrors' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]